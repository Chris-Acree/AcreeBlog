@using AcreeBlog.ViewModels.Admin
@using X.PagedList.Mvc.Core; @*import this so we get our HTML Helper*@
@using X.PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />
@model IPagedList<AdminBlogPostViewModel>
@{
    ViewData["Title"] = "Admin - Manage Posts";
    Layout = "_Layout_New";
}
<link rel="stylesheet" href="~/css/admin.scss" />

<section class="module">


    <div class="container">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header"><h3>Admin Tools - Manage Posts</h3></div>
                <div class="card-body p-3">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Title</th>
                                <th>Author</th>
                                <th>Description</th>
                                <th>Publish Date</th>
                                <th>Is Public?</th>
                                <th>Orphaned Author?</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var post in Model)
                            {
                                var aid = $"a{post.Id}";
                                <tr id="@post.Id">
                                    <td>@post.Id</td>
                                    <td>@post.Title</td>
                                    <td>@post.AuthorFirstName @post.AuthorLastName</td>
                                    <td>@post.Description</td>
                                    <td>@post.PublishOn</td>
                                    <td>@post.Public</td>
                                    <td>
                                        @if (@post.AuthorApplicationUserId == null)
                                        {
                                            <span>Yes</span>
                                        }
                                    </td>
                                    <td>
                                        <form asp-controller="Admin" asp-action="DeletePost" asp-route-id="@post.Id" method="post" onsubmit="return confirm('Do you want to delete @post.Title')">
                                            <span class="text-nowrap">
                                                <a class="btn btn-primary btn-sm" asp-controller="Home" asp-action="BlogPostBySlug" asp-route-id="@post.Slug">View</a>
                                                <a class="btn btn-primary btn-sm" asp-controller="Author" asp-action="editpost" asp-route-id="@post.Id">Edit</a>
                                                <button class="btn btn-danger btn-sm delpost" type="submit">Delete</button>
                                            </span>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    @{
                        var hasPrevious = Model.HasPreviousPage ? "" : "disabled";
                        var hasNext = Model.HasNextPage ? "" : "disabled";
                    }
                    <div class="float-right">
                        <ul class="pagination text">

                            <!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
                            //Html.PagedListPager((IPagedList)ViewBag.Names, page => Url.Action("Index", new { page }))
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

</section>

<script src="~/lib/js/jquery.min.js"></script>
